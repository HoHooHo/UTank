//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ColorEffectWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ColorEffect), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AdjustSaturation", AdjustSaturation);
		L.RegFunction("AdjustContrast", AdjustContrast);
		L.RegFunction("AdjustBrightness", AdjustBrightness);
		L.RegFunction("AdjustHue", AdjustHue);
		L.RegFunction("Tint", Tint);
		L.RegFunction("Tint2", Tint2);
		L.RegFunction("ResetMatrix", ResetMatrix);
		L.RegFunction("ConcatValues", ConcatValues);
		L.RegFunction("Invert", Invert);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_BlendSrc", get_m_BlendSrc, set_m_BlendSrc);
		L.RegVar("m_BlendDst", get_m_BlendDst, set_m_BlendDst);
		L.RegVar("m_ColorFilterType", get_m_ColorFilterType, set_m_ColorFilterType);
		L.RegVar("m_Saturation", get_m_Saturation, set_m_Saturation);
		L.RegVar("m_Hue", get_m_Hue, set_m_Hue);
		L.RegVar("m_Contrast", get_m_Contrast, set_m_Contrast);
		L.RegVar("gray", get_gray, set_gray);
		L.RegVar("blendType", get_blendType, set_blendType);
		L.RegVar("blendSrc", get_blendSrc, set_blendSrc);
		L.RegVar("blendDst", get_blendDst, set_blendDst);
		L.RegVar("colorFilterType", get_colorFilterType, set_colorFilterType);
		L.RegVar("brightness", get_brightness, set_brightness);
		L.RegVar("saturation", get_saturation, set_saturation);
		L.RegVar("hue", get_hue, set_hue);
		L.RegVar("contrast", get_contrast, set_contrast);
		L.RegVar("tintColor", get_tintColor, set_tintColor);
		L.RegVar("tintAmount", get_tintAmount, set_tintAmount);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AdjustSaturation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ColorEffect obj = (ColorEffect)ToLua.CheckObject(L, 1, typeof(ColorEffect));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.AdjustSaturation(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AdjustContrast(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ColorEffect obj = (ColorEffect)ToLua.CheckObject(L, 1, typeof(ColorEffect));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.AdjustContrast(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AdjustBrightness(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ColorEffect obj = (ColorEffect)ToLua.CheckObject(L, 1, typeof(ColorEffect));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.AdjustBrightness(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AdjustHue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ColorEffect obj = (ColorEffect)ToLua.CheckObject(L, 1, typeof(ColorEffect));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.AdjustHue(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Tint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ColorEffect obj = (ColorEffect)ToLua.CheckObject(L, 1, typeof(ColorEffect));
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.Tint(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Tint2(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ColorEffect obj = (ColorEffect)ToLua.CheckObject(L, 1, typeof(ColorEffect));
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.Tint2(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetMatrix(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ColorEffect obj = (ColorEffect)ToLua.CheckObject(L, 1, typeof(ColorEffect));
			obj.ResetMatrix();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConcatValues(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			ColorEffect obj = (ColorEffect)ToLua.CheckObject(L, 1, typeof(ColorEffect));
			float[] arg0 = ToLua.CheckParamsNumber<float>(L, 2, count - 1);
			obj.ConcatValues(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Invert(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ColorEffect obj = (ColorEffect)ToLua.CheckObject(L, 1, typeof(ColorEffect));
			obj.Invert();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_BlendSrc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			UnityEngine.Rendering.BlendMode ret = obj.m_BlendSrc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_BlendSrc on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_BlendDst(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			UnityEngine.Rendering.BlendMode ret = obj.m_BlendDst;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_BlendDst on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_ColorFilterType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			ColorEffect.ColorFilterType ret = obj.m_ColorFilterType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_ColorFilterType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Saturation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float ret = obj.m_Saturation;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_Saturation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Hue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float ret = obj.m_Hue;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_Hue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Contrast(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float ret = obj.m_Contrast;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_Contrast on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gray(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			bool ret = obj.gray;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gray on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blendType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			ColorEffect.BlendType ret = obj.blendType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index blendType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blendSrc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			UnityEngine.Rendering.BlendMode ret = obj.blendSrc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index blendSrc on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blendDst(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			UnityEngine.Rendering.BlendMode ret = obj.blendDst;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index blendDst on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_colorFilterType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			ColorEffect.ColorFilterType ret = obj.colorFilterType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index colorFilterType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_brightness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float ret = obj.brightness;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index brightness on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_saturation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float ret = obj.saturation;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index saturation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float ret = obj.hue;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_contrast(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float ret = obj.contrast;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index contrast on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tintColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			UnityEngine.Color ret = obj.tintColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tintColor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tintAmount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float ret = obj.tintAmount;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tintAmount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_BlendSrc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			UnityEngine.Rendering.BlendMode arg0 = (UnityEngine.Rendering.BlendMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.Rendering.BlendMode));
			obj.m_BlendSrc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_BlendSrc on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_BlendDst(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			UnityEngine.Rendering.BlendMode arg0 = (UnityEngine.Rendering.BlendMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.Rendering.BlendMode));
			obj.m_BlendDst = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_BlendDst on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_ColorFilterType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			ColorEffect.ColorFilterType arg0 = (ColorEffect.ColorFilterType)ToLua.CheckObject(L, 2, typeof(ColorEffect.ColorFilterType));
			obj.m_ColorFilterType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_ColorFilterType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Saturation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_Saturation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_Saturation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Hue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_Hue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_Hue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Contrast(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_Contrast = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_Contrast on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gray(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.gray = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gray on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blendType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			ColorEffect.BlendType arg0 = (ColorEffect.BlendType)ToLua.CheckObject(L, 2, typeof(ColorEffect.BlendType));
			obj.blendType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index blendType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blendSrc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			UnityEngine.Rendering.BlendMode arg0 = (UnityEngine.Rendering.BlendMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.Rendering.BlendMode));
			obj.blendSrc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index blendSrc on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blendDst(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			UnityEngine.Rendering.BlendMode arg0 = (UnityEngine.Rendering.BlendMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.Rendering.BlendMode));
			obj.blendDst = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index blendDst on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_colorFilterType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			ColorEffect.ColorFilterType arg0 = (ColorEffect.ColorFilterType)ToLua.CheckObject(L, 2, typeof(ColorEffect.ColorFilterType));
			obj.colorFilterType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index colorFilterType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_brightness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.brightness = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index brightness on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_saturation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.saturation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index saturation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_hue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.hue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_contrast(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.contrast = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index contrast on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tintColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.tintColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tintColor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tintAmount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColorEffect obj = (ColorEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.tintAmount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tintAmount on a nil value" : e.Message);
		}
	}
}

