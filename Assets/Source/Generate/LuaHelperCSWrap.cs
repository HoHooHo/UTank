//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaHelperCSWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaHelperCS), typeof(System.Object));
		L.RegFunction("Init", Init);
		L.RegFunction("Uninit", Uninit);
		L.RegFunction("New", _CreateLuaHelperCS);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.RegVar("ResManager", get_ResManager, null);
		L.RegVar("Scheduler", get_Scheduler, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLuaHelperCS(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				LuaHelperCS obj = new LuaHelperCS();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: LuaHelperCS.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaHelperCS obj = (LuaHelperCS)ToLua.CheckObject(L, 1, typeof(LuaHelperCS));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.Init(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Uninit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaHelperCS obj = (LuaHelperCS)ToLua.CheckObject(L, 1, typeof(LuaHelperCS));
			obj.Uninit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, LuaHelperCS.Instance);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResManager(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaHelperCS obj = (LuaHelperCS)o;
			ResManager ret = obj.ResManager;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ResManager on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Scheduler(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaHelperCS obj = (LuaHelperCS)o;
			SchedulerCS ret = obj.Scheduler;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Scheduler on a nil value" : e.Message);
		}
	}
}

